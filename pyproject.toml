# ─────────────────────────── Build backend ────────────────────────────
[build-system]
requires = ["setuptools>=69", "wheel", "setuptools_scm[toml]>=8.0"]
build-backend = "setuptools.build_meta"

# ───────────────────────────── Metadata ───────────────────────────────
[project]
name            = "pmarlo"
description     = "Protein Markov State Model Analysis with Replica Exchange"
readme          = "README.md"
requires-python = ">=3.11,<3.13"
license         = { text = "MIT" }
authors = [
  { name = "PMARLO Development Team", email = "pmarlo@example.com" },
]
keywords = [
  "molecular dynamics",
  "markov state models",
  "replica exchange",
  "protein simulation",
  "biophysics",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Topic :: Scientific/Engineering :: Chemistry",
  "Topic :: Scientific/Engineering :: Physics",
]
dynamic = ["version"]            # ostateczną wersję dostarcza setuptools-scm

dependencies = [
  "numpy>=1.24,<2.3",
  "scipy>=1.10,<2.0",
  "matplotlib>=3.6,<4.0",
  "pandas>=1.5,<3.0",
  "scikit-learn>=1.2,<2.0",
  "mdtraj>=1.9,<2.0",
  "openmm>=8.0,<9.0",
  "rdkit>=2024.03.1,<2025.0",
]

# ─────────────────────── Optional runtime extras ──────────────────────
[project.optional-dependencies]
fixer = [
  "pdbfixer @ git+https://github.com/openmm/pdbfixer@v1.11"
]

# ───────────────────── URLs & entry-points / CLI ──────────────────────
[project.urls]
Homepage      = "https://github.com/yourusername/pmarlo"
Documentation = "https://pmarlo.readthedocs.io/"
Repository    = "https://github.com/yourusername/pmarlo"
Issues        = "https://github.com/yourusername/pmarlo/issues"

[project.scripts]
pmarlo = "pmarlo.main:main"

# ─────────────────────────── setuptools-scm ───────────────────────────
[tool.setuptools_scm]
write_to = "src/pmarlo/_version.py"

# ──────────────────── Package discovery & data files ──────────────────
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
"pmarlo" = ["py.typed", "*.md", "**/*.yml", "**/*.yaml"]

# ────────────────────────── Dev-tooling groups ────────────────────────
[tool.poetry]
version = "0.0.0"        # placeholder dla package-mode; nadpisany przy buildzie

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7"
black      = "^25.0"
isort      = "^5.10.1"
mypy = "1.17"

[tool.poetry.group.tests.dependencies]
pytest     = "^8.2"
pytest-cov = "^5.0"

[tool.poetry.group.docs.dependencies]
sphinx            = "^7.3"
sphinx-rtd-theme  = "^2.0"

# ───────────────────────── Formatting & linting ───────────────────────
[tool.black]
line-length    = 88
target-version = ["py311"]
include        = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile            = "black"
line_length        = 88
multi_line_output  = 3
known_first_party  = ["pmarlo"]

[tool.mypy]
python_version         = "3.11"
explicit_package_bases = true
packages               = ["pmarlo"]
ignore_missing_imports = true

# Tymczasowo WYŁĄCZAMY ostrzejsze reguły
disallow_untyped_defs    = false          # włączaj stopniowo per-moduł
warn_return_any          = true           # zostawione – wyróżnia .any
warn_unused_configs      = true
# no_implicit_optional   = false          # zostaw domyślne

[[tool.mypy.overrides]]
module = "rdkit.*"
ignore_errors = true

# ────────────────────────── Pytest defaults ───────────────────────────
[tool.pytest.ini_options]
testpaths        = ["tests"]
addopts          = "-v --tb=short"
python_files     = ["test_*.py"]
python_functions = ["test_*"]
python_classes   = ["Test*"]
