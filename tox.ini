[tox]
minversion = 4.6
isolated_build = true
envlist = py311, py312, py311-no-pdbfixer, py312-no-pdbfixer, lint, type, format
requires =
    tox>=4.6
    virtualenv>=20.25.0  # For better PEP-514 handling

# ----------------------- Default test environment -----------------------
[testenv]
description = Run unit tests with coverage
package = wheel
deps =
    pytest>=8.2
    pytest-cov>=5.0
    openmm>=8.1
    rdkit>=2023.9
    numpy>=1.24
    mdtraj>=1.9
    # Optional dependencies
    pdbfixer; platform_system != "Windows"  # Skip on Windows as it's not in PyPI

[testenv:py311]
description = Run tests with Python 3.11
basepython = python3.11
commands =
    python -V
    pytest --cov=pmarlo --cov-report=term-missing --cov-fail-under=30

[testenv:py312]
description = Run tests with Python 3.12
basepython = python3.12
commands =
    python -V
    pytest --cov=pmarlo --cov-report=term-missing --cov-fail-under=30

[testenv:py311-no-pdbfixer]
description = Run tests with Python 3.11 without PDBFixer
basepython = python3.11
deps =
    pytest>=8.2
    pytest-cov>=5.0
    openmm>=8.1
    rdkit>=2023.9
    numpy>=1.24
    mdtraj>=1.9
commands =
    python -V
    pytest -v -m "not pdbfixer" --cov=pmarlo --cov-report=term-missing

[testenv:py312-no-pdbfixer]
description = Run tests with Python 3.12 without PDBFixer
basepython = python3.12
deps =
    pytest>=8.2
    pytest-cov>=5.0
    openmm>=8.1
    rdkit>=2023.9
    numpy>=1.24
    mdtraj>=1.9
commands =
    python -V
    pytest -v -m "not pdbfixer" --cov=pmarlo --cov-report=term-missing

# ---------------------------- Linting checks ----------------------------
[testenv:lint]
description = Static style checks (black, isort, flake8)
skip_install = true
deps =
    black==25.1.0
    isort>=5.13
    flake8>=7.0
    mccabe>=0.7
    pylint>=3.2,<4
depends =
    format
commands =
    black --check .
    isort --check-only .
    flake8 src tests
    pylint src/pmarlo

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = .git, .tox, .venv, build, dist, __pycache__
max-complexity = 10

[coverage:run]
omit =
    src/pmarlo/_version.py
    src/pmarlo/experiments/cli.py
    tests/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if TYPE_CHECKING:
    raise NotImplementedError
    pass
    raise ImportError

# ----------------------------- Type checks ------------------------------
[testenv:type]
description = Type checking via mypy
skip_install = false
deps =
    mypy==1.17.0
commands =
    mypy src/pmarlo

# --------------------------- Auto-formatting ----------------------------
[testenv:format]
description = Apply code formatting (black, isort)
skip_install = true
deps =
    black==25.1.0
    isort>=5.13
commands =
    black .
    isort .
